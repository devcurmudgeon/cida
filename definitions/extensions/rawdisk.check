#!/usr/bin/python
# Copyright (C) 2014-2015  Codethink Limited
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.

'''Preparatory checks for Morph 'rawdisk' write extension'''

import os

import writeexts


class RawdiskCheckExtension(writeexts.WriteExtension):
    def process_args(self, args):
        if len(args) != 1:
            raise writeexts.ExtensionError(
                'Wrong number of command line args')

        self.require_btrfs_in_deployment_host_kernel()

        location = args[0]
        upgrade = self.get_environment_boolean('UPGRADE')
        if upgrade:
            if not self.is_device(location):
                if not os.path.isfile(location):
                    raise writeexts.ExtensionError(
                        'Cannot upgrade %s: it is not an existing disk image' %
                        location)

            version_label = os.environ.get('VERSION_LABEL')
            if version_label is None:
                raise writeexts.ExtensionError(
                    'VERSION_LABEL was not given. It is required when '
                    'upgrading an existing system.')
        else:
            if not self.is_device(location):
                if os.path.exists(location):
                    raise writeexts.ExtensionError(
                        'Target %s already exists. Use `morph upgrade` if you '
                        'want to update an existing image.' % location)

RawdiskCheckExtension().run()
